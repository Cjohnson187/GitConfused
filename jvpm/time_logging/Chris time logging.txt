Chris team 3 time logging-


6:26 pm  (start) 2/23 or 2/24
-making tests in opcode branch
-switched to header info to amke tests
-added stack class for hader info
-ran into issues in general
-made a xcel doc with breakdown of the bytecodes to excpect
10:42 pm (stop) 4h 16min

2/28/19 9:27 pm start-
- call with zack 
- we made another branch
- made jvpm_methods into a class than can create an object
- made one test for iadd to test object and works
2/28/19 11:54 pm stop 2h 27 m

3/1/19 10:30 am start-
- made jvpm_methods a class that is instanciable
- made a test for iadd to test instance
- fixed dictionary to work with object
- pushed to test branch
- working on testing the method to get opcodes and run them
* issue - still need to be able to read opcodes from class file
- call with zack 2:15 - 2:46 -(bob should be done with opcode imprt tonight)
- added test for loop to check if it is reading bytes correctly and going through dictionaries to return methods
- also a lot of research for making objects of classes in python
3/1/19 5:13 pm stopped 6h 43m


3/2/19 9:17 am start-
- finished istore and load tets
- had to fix loop test to not use fixed variables
- fixed xor test issue, was just looking for wrong result
- got travis to run tests on program by fixing imports and moving test.class up a folder
- still have issues with sonar cloud not working from travis
3/2/19 2:45 pm stopped  5h 28m

3/16/19 5:46 start-
-making an application to translate bytecode of constant pool
-discord chat
-ended call with bob and mark, mark is working on the rest of the opcode methods, i am working on translating the pool
3/16/19 7:50 end

3/16/19 8:29 pm start-
finishing translator
- got the translator to go through the dictionary and start getting next values
- need to start building all the methods and append the dictionary with the new strings that are pulled
3/17/19 1:50 am end

3/17/19  10:45 am start-
-continuing to translate pool
-issues decoding byte(as string) from utf-8
-decoding finally working for utf 8- had to convert to int then to hex then decode utf8

-break - 11:26 am

- cont - 11:30 am-
-got it to append a new dictionary with corresponding strings
but am getting an extra string for some reason in slot 1
stopped -5:16


4/6/19 3:15 pm start-
- starting to refactor cool translator
- learned the difference between global variables and instance variables 3:39
- hit a block and had to draw out my problem
- end 7:30 pm


4/7/19 11:30 start-
- continuing to refactor 11:30
- team meeting
- 12:55 refactoring working but need rest of methods and getting
hex bit in front of utf8 conversion
- removed funky character in utf8 translation, so refactoring done need to build other methods 1:21
- 1:40 call ended
- added field reference and seems to be working with add two
4/7/19 1:48 end


4/7/19 6:45 pm trying to build more methods but I dont think im getting the correct constant pool for other class
aside from add two and test
4/7/19 7:05 pm

defaultdict(<class 'list'>,
{0: ['0a', '09', '14'],
1: ['07', '15'],
2: ['09', '16', '17'],
3: ['0a', '02', '18'],
4: ['0a', '02', '19'],
5: ['09', '16', '1a'],
6: ['0a', '1b', '1c'],
7: ['07', '1d'],
8: ['07', '1e'],
9: ['01', '00', '06', '3c', '69', '6e', '69', '74', '3e'], 10: ['01', '00', '03', '28', '29', '56'],
11: ['01', '00', '04', '43', '6f', '64', '65'],
12: ['01', '00', '0f', '4c', '69', '6e', '65', '4e', '75', '6d', '62', '65', '72', '54', '61', '62', '6c', '65'],
13: ['01', '00', '04', '6d', '61', '69', '6e'],
14: ['01', '00', '16', '28', '5b', '4c', '6a', '61', '76', '61', '2f', '6c', '61', '6e', '67', '2f', '53', '74', '72', '69', '6e', '67', '3b', '29', '56'],
15: ['01', '00', '0a', '45', '78', '63', '65', '70', '74', '69', '6f', '6e', '73'],
16: ['07', '1f'],
17: ['01', '00', '0a', '53', '6f', '75', '72', '63', '65', '46', '69', '6c', '65'],
18: ['01', '00', '0b', '41', '64', '64', '54', '77', '6f', '2e', '6a', '61', '76', '61'],
19: ['0c', '0a', '0b'],
20: ['01', '00', '11', '6a', '61', '76', '61', '2f', '75', '74', '69', '6c', '2f', '53', '63', '61', '6e', '6e', '65', '72'],
21: ['07', '20'],
22: ['0c', '21', '22'],
23: ['0c', '0a', '23'],
24: ['0c', '24', '25'],
25: ['0c', '26', '27'],
26: ['07', '28'],
27: ['0c', '29', '2a'],
28: ['01', '00', '06', '41', '64', '64', '54', '77', '6f'],
29: ['01', '00', '10', '6a', '61', '76', '61', '2f', '6c', '61', '6e', '67', '2f', '4f', '62', '6a', '65', '63', '74'],
30: ['01', '00', '13', '6a', '61', '76', '61', '2f', '69', '6f', '2f', '49', '4f', '45', '78', '63', '65', '70', '74', '69', '6f', '6e'],
31: ['01', '00', '10', '6a', '61', '76', '61', '2f', '6c', '61', '6e', '67', '2f', '53', '79', '73', '74', '65', '6d'],
32: ['01', '00', '02', '69', '6e'],
33: ['01', '00', '15', '4c', '6a', '61', '76', '61', '2f', '69', '6f', '2f', '49', '6e', '70', '75', '74', '53', '74', '72', '65', '61', '6d', '3b'],
34: ['01', '00', '18', '28', '4c', '6a', '61', '76', '61', '2f', '69', '6f', '2f', '49', '6e', '70', '75', '74', '53', '74', '72', '65', '61', '6d', '3b', '29', '56'],
35: ['01', '00', '07', '6e', '65', '78', '74', '49', '6e', '74'],
36: ['01', '00', '03', '28', '29', '49'],
37: ['01', '00', '03', '6f', '75', '74'],
38: ['01', '00', '15', '4c', '6a', '61', '76', '61', '2f', '69', '6f', '2f', '50', '72', '69', '6e', '74', '53', '74', '72', '65', '61', '6d', '3b'],
39: ['01', '00', '13', '6a', '61', '76', '61', '2f', '69', '6f', '2f', '50', '72', '69', '6e', '74', '53', '74', '72', '65', '61', '6d'],
40: ['01', '00', '07', '70', '72', '69', '6e', '74', '6c', '6e'],
41: ['01', '00', '04', '28', '49', '29', '56']}) temp








